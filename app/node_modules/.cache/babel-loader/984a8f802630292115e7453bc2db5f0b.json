{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/projekt_gr-n/src/site_pages/home.js\";\nimport React, { Component } from \"react\";\nimport about from './images/simonAboutImage.png';\nimport { Link } from \"react-router-dom\";\nimport Butter from 'buttercms';\nimport '../butterclient';\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77');\nexport default class HomeView extends Component {\n  constructor(props) {\n    super(props);\n    this.getPageLink();\n    this.props = props;\n    this.state = {\n      data: {\n        slug: \"home\",\n        name: \"Home\",\n        page_type: null,\n        fields: {\n          homepage: {\n            homesegments: [{\n              homesegment: \"<h>Hej Detta har jag läst in från vårat API</h>\\n<img src=\\\" \\\"/>\\n<p>Nu vill jag bara testa lite </p>\\n\"\n            }]\n          }\n        }\n      },\n      sitePosition: \"home\"\n    };\n    this.getPageInformation(this.state.sitePosition);\n  }\n\n  getPageLink() {\n    let currentPageLocation = window.location.href;\n    let ProcessedCurrentPageLocation = currentPageLocation.replace(\"http://localhost:3000\", \"\");\n    let link = {\n      sitePosition: ProcessedCurrentPageLocation\n    };\n    console.log(link);\n\n    if (link.sitePosition !== \"\") {\n      this.setState(sitePosition = ProcessedCurrentPageLocation);\n    }\n  }\n\n  async getPageInformation(link) {\n    const resp = await butter.page.retrieve('*', '' + link + '');\n    this.setState(resp.data);\n  }\n\n  CreatePage(pagedata) {\n    //let data = this.state.data;\n    console.log(\"inside createpage\");\n    console.log(pagedata);\n    let pagecontent = Object.values(pagedata);\n    let containor = /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: pagecontent\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    });\n    console.log(pagecontent);\n    return containor; //pagedata.map(p => {return p.homesegment});\n    //data.map(page => {console.log(page, page.map((pagesegment) =>{pagesegment}))})\n  }\n\n  render() {\n    let data = this.state.data;\n    console.log(\"this is in render\");\n    console.log(data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageTopDivider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, this.state.data.fields.homepage.homesegments.map(homesegment => this.CreatePage(homesegment))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction ImageLoaderAbout() {\n  // Import result is the URL of your image\n  return /*#__PURE__*/React.createElement(\"img\", {\n    className: \"showCaseImage\",\n    src: about,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction ImageLoaderPhotography() {\n  // Import result is the URL of your image\n  return /*#__PURE__*/React.createElement(\"img\", {\n    className: \"showCaseImage\",\n    src: about,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/src/site_pages/home.js"],"names":["React","Component","about","Link","Butter","butter","HomeView","constructor","props","getPageLink","state","data","slug","name","page_type","fields","homepage","homesegments","homesegment","sitePosition","getPageInformation","currentPageLocation","window","location","href","ProcessedCurrentPageLocation","replace","link","console","log","setState","resp","page","retrieve","CreatePage","pagedata","pagecontent","Object","values","containor","__html","render","map","ImageLoaderAbout","ImageLoaderPhotography"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,iBAAP;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAAC,0CAAD,CAArB;AAGA,eAAe,MAAME,QAAN,SAAuBL,SAAvB,CAAiC;AAC5CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKE,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAC;AACpBC,QAAAA,IAAI,EAAE,MADc;AAEpBC,QAAAA,IAAI,EAAE,MAFc;AAGpBC,QAAAA,SAAS,EAAE,IAHS;AAIpBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,YAAY,EAAE,CACZ;AACEC,cAAAA,WAAW,EAAE;AADf,aADY;AADN;AADJ;AAJY,OAAP;AAabC,MAAAA,YAAY,EAAG;AAbF,KAAb;AAeA,SAAKC,kBAAL,CAAwB,KAAKV,KAAL,CAAWS,YAAnC;AACD;;AAGDV,EAAAA,WAAW,GAAE;AACX,QAAIY,mBAAmB,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1C;AACA,QAAIC,4BAA4B,GAAGJ,mBAAmB,CAACK,OAApB,CAA4B,uBAA5B,EAAqD,EAArD,CAAnC;AACA,QAAIC,IAAI,GAAG;AAACR,MAAAA,YAAY,EAAEM;AAAf,KAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEE,QAAGA,IAAI,CAACR,YAAL,KAAsB,EAAzB,EAA4B;AAC1B,WAAKW,QAAL,CAAeX,YAAY,GAAGM,4BAA9B;AACD;AACJ;;AAGL,QAAML,kBAAN,CAAyBO,IAAzB,EAA+B;AAC3B,UAAMI,IAAI,GAAG,MAAM1B,MAAM,CAAC2B,IAAP,CAAYC,QAAZ,CAAqB,GAArB,EAA0B,KAAGN,IAAH,GAAQ,EAAlC,CAAnB;AACA,SAAKG,QAAL,CAAcC,IAAI,CAACpB,IAAnB;AAGD;;AAEDuB,EAAAA,UAAU,CAACC,QAAD,EAAU;AAClB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcH,QAAd,CAAlB;AACF,QAAII,SAAS,gBAAG;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEJ;AAAV,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEER,IAAAA,OAAO,CAACC,GAAR,CAAYO,WAAZ;AACA,WAAQG,SAAR,CARkB,CAQC;AACnB;AACD;;AAGHE,EAAAA,MAAM,GAAG;AACP,QAAI9B,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKD,KAAL,CAAWC,IAAX,CAAgBI,MAAhB,CAAuBC,QAAvB,CAAgCC,YAAhC,CAA6CyB,GAA7C,CAAiDxB,WAAW,IAAG,KAAKgB,UAAL,CAAgBhB,WAAhB,CAA/D,CADD,CAFF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAvE6C;;AA4EhD,SAASyB,gBAAT,GAA4B;AAC1B;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEzC,KAApC;AAA2C,IAAA,GAAG,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,SAAS0C,sBAAT,GAAkC;AAChC;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAE1C,KAApC;AAA2C,IAAA,GAAG,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { Component } from \"react\";\nimport about from './images/simonAboutImage.png';\nimport { Link } from \"react-router-dom\";\nimport Butter from 'buttercms';\nimport '../butterclient';\n\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77')\n\n\nexport default class HomeView extends Component {\n    constructor(props) {\n        super(props);\n        this.getPageLink();\n        this.props = props;\n        this.state = { data:{\n        slug: \"home\",\n        name: \"Home\",\n        page_type: null,\n        fields: {\n          homepage: {\n            homesegments: [\n              {\n                homesegment: \"<h>Hej Detta har jag läst in från vårat API</h>\\n<img src=\\\" \\\"/>\\n<p>Nu vill jag bara testa lite </p>\\n\"\n              }\n            ]\n          }\n        }}, \n        sitePosition : \"home\"\n                      };\n        this.getPageInformation(this.state.sitePosition)\n      }\n      \n      \n      getPageLink(){\n        let currentPageLocation = window.location.href;\n        let ProcessedCurrentPageLocation = currentPageLocation.replace(\"http://localhost:3000\", \"\")\n        let link = {sitePosition: ProcessedCurrentPageLocation}\n        console.log(link);\n          \n          if(link.sitePosition !== \"\"){\n            this.setState( sitePosition = ProcessedCurrentPageLocation);\n          }\n      }\n  \n\n  async getPageInformation(link) {\n      const resp = await butter.page.retrieve('*', ''+link+'');\n      this.setState(resp.data);\n      \n\n    }\n\n    CreatePage(pagedata){\n      //let data = this.state.data;\n      console.log(\"inside createpage\");\n      console.log(pagedata);\n      let pagecontent = Object.values(pagedata);\n    let containor = <div dangerouslySetInnerHTML={{ __html: pagecontent}} />\n      \n      console.log(pagecontent);\n      return (containor) //pagedata.map(p => {return p.homesegment});\n      //data.map(page => {console.log(page, page.map((pagesegment) =>{pagesegment}))})\n    }\n  \n\n  render() {\n    let data = this.state.data;\n    console.log(\"this is in render\")\n    console.log(data);\n    \n    return (\n      <div className=\"pageWrapper\">        \n        <div className=\"pageTopDivider\"></div>\n        <div className=\"center\">\n        {this.state.data.fields.homepage.homesegments.map(homesegment=> this.CreatePage(homesegment))} \n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"divider\"></div>\n      </div>\n    );\n  }\n\n \n}\n\nfunction ImageLoaderAbout() {\n  // Import result is the URL of your image\n  return <img className=\"showCaseImage\" src={about} alt=\"Logo\" />;\n}\n\nfunction ImageLoaderPhotography() {\n  // Import result is the URL of your image\n  return <img className=\"showCaseImage\" src={about} alt=\"Logo\" />;\n}"]},"metadata":{},"sourceType":"module"}