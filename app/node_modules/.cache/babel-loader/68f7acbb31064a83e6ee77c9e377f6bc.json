{"ast":null,"code":"var Promise, config, credentials, crypto, flags, httpRequest, klarna, parseError, publicMethods, request, wrapper;\ncrypto = require('crypto');\nrequest = require('request');\nPromise = require('promise');\nflags = {\n  live: false,\n  initalized: false\n};\ncredentials = {\n  eid: null,\n  secret: null\n};\nconfig = {\n  purchase_country: 'SE',\n  purchase_currency: 'SEK',\n  locale: 'sv-se',\n  merchant: {\n    id: null,\n    terms_uri: null,\n    checkout_uri: null,\n    confirmation_uri: null,\n    push_uri: null\n  },\n  gui: {\n    layout: 'desktop'\n  }\n};\nklarna = {\n  url: {\n    test: 'https://checkout.testdrive.klarna.com/checkout/orders',\n    live: 'https://checkout.klarna.com/checkout/orders'\n  },\n  headers: {\n    contentType: 'application/vnd.klarna.checkout.aggregated-order-v2+json',\n    accept: 'application/vnd.klarna.checkout.aggregated-order-v2+json'\n  }\n};\n/* PRIVATE */\n\nhttpRequest = {\n  headers: function (payload) {\n    var biscuit, hash;\n    biscuit = payload != null ? JSON.stringify(payload) + credentials.secret : credentials.secret;\n    hash = crypto.createHash('sha256').update(biscuit, 'utf-8').digest('base64');\n    return {\n      'Accept': klarna.headers.accept,\n      'Authorization': 'Klarna ' + hash,\n      'Content-Type': klarna.headers.contentType\n    };\n  },\n  options: function (data, id) {\n    var url;\n    url = flags.live ? klarna.url.live : klarna.url.test;\n    return {\n      url: id != null ? url + '/' + id : url,\n      headers: this.headers(data),\n      body: data,\n      json: data != null ? true : false\n    };\n  }\n};\n\nwrapper = function (f) {\n  var key, ref, value;\n\n  if (!flags.initalized) {\n    throw 'Klarna module not initialized. Please use init() method.';\n  }\n\n  ref = config.merchant;\n\n  for (key in ref) {\n    value = ref[key];\n\n    if (value == null) {\n      throw \"Config error: \" + key + \" not set\";\n    }\n  }\n\n  return f;\n};\n\nparseError = function (error, response, body) {\n  if (error != null) {\n    return {\n      type: 'HTTP',\n      code: error.code,\n      message: error.message\n    };\n  } else if (body) {\n    body = typeof body === 'string' ? JSON.parse(body) : body;\n    return {\n      type: 'Klarna',\n      code: body.http_status_code + \" - \" + body.http_status_message,\n      message: body.internal_message\n    };\n  }\n};\n/* PUBLIC */\n\n\npublicMethods = {\n  init: function (input) {\n    if (input == null) {\n      throw \"Missing init values\";\n    }\n\n    if (input.eid != null) {\n      credentials.eid = input.eid;\n      config.merchant.id = input.eid;\n    }\n\n    if (input.secret != null) {\n      credentials.secret = input.secret;\n    }\n\n    if (input.live != null && typeof input.live === 'boolean') {\n      flags.live = input.live;\n    }\n\n    if (input.eid != null && input.secret != null) {\n      return flags.initalized = true;\n    }\n  },\n  config: function (input) {\n    if (input.purchase_country != null) {\n      config.purchase_country = input.purchase_country;\n    }\n\n    if (input.purchase_currency != null) {\n      config.purchase_currency = input.purchase_currency;\n    }\n\n    if (input.locale != null) {\n      config.locale = input.locale;\n    }\n\n    if (input.layout != null) {\n      if (input.layout === 'desktop' || input.layout === 'mobile') {\n        config.gui.layout = input.layout;\n      }\n    }\n\n    if (input.terms_uri != null) {\n      config.merchant.terms_uri = input.terms_uri;\n    }\n\n    if (input.cancellation_terms_uri != null) {\n      config.merchant.cancellation_terms_uri = input.cancellation_terms_uri;\n    }\n\n    if (input.checkout_uri != null) {\n      config.merchant.checkout_uri = input.checkout_uri;\n    }\n\n    if (input.confirmation_uri != null) {\n      config.merchant.confirmation_uri = input.confirmation_uri;\n    }\n\n    if (input.push_uri != null) {\n      return config.merchant.push_uri = input.push_uri;\n    }\n  },\n  place: function (cart) {\n    var f;\n\n    f = function () {\n      return new Promise(function (resolve, reject) {\n        var resource;\n        resource = config;\n        resource.cart = cart;\n        return request.post(httpRequest.options(resource), function (error, response, body) {\n          var err, location;\n          err = parseError(error, response, body);\n\n          if (err != null) {\n            return reject(err);\n          } else if (response.statusCode != null && response.statusCode === 201) {\n            location = response.headers.location;\n            return resolve(location.slice(location.lastIndexOf('/') + 1));\n          }\n        });\n      });\n    };\n\n    return wrapper(f)();\n  },\n  fetch: function (id) {\n    var f;\n\n    f = function () {\n      return new Promise(function (resolve, reject) {\n        return request.get(httpRequest.options(null, id), function (error, response, body) {\n          if (response != null) {\n            if (response.statusCode === 200) {\n              return resolve(JSON.parse(body));\n            } else {\n              return reject(parseError(error, response, body));\n            }\n          } else {\n            return reject(parseError(error, response, body));\n          }\n        });\n      });\n    };\n\n    return wrapper(f)();\n  },\n  update: function (id, data) {\n    var f;\n\n    f = function () {\n      return new Promise(function (resolve, reject) {\n        return request.post(httpRequest.options(data, id), function (error, response, body) {\n          if (response != null) {\n            if (response.statusCode != null && response.statusCode === 200) {\n              return resolve(body);\n            } else {\n              return reject(parseError(error, response, body));\n            }\n          } else {\n            return reject(parseError(error, response, body));\n          }\n        });\n      });\n    };\n\n    return wrapper(f)();\n  },\n  confirm: function (id, orderid1, orderid2) {\n    var f;\n\n    f = function () {\n      return new Promise(function (resolve, reject) {\n        var data;\n        data = {\n          status: 'created'\n        };\n\n        if (orderid1 != null) {\n          data.merchant_reference = {\n            orderid1: orderid1\n          };\n        }\n\n        if (orderid2 != null) {\n          data.merchant_reference.orderid2 = orderid2;\n        }\n\n        return publicMethods.update(id, data).then(function (order) {\n          return resolve(order);\n        }, function (error) {\n          return reject(error);\n        });\n      });\n    };\n\n    return wrapper(f)();\n  }\n};\nmodule.exports = publicMethods;","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/node_modules/klarna-checkout/src/klarna.js"],"names":["Promise","config","credentials","crypto","flags","httpRequest","klarna","parseError","publicMethods","request","wrapper","require","live","initalized","eid","secret","purchase_country","purchase_currency","locale","merchant","id","terms_uri","checkout_uri","confirmation_uri","push_uri","gui","layout","url","test","headers","contentType","accept","payload","biscuit","hash","JSON","stringify","createHash","update","digest","options","data","body","json","f","key","ref","value","error","response","type","code","message","parse","http_status_code","http_status_message","internal_message","init","input","cancellation_terms_uri","place","cart","resolve","reject","resource","post","err","location","statusCode","slice","lastIndexOf","fetch","get","confirm","orderid1","orderid2","status","merchant_reference","then","order","module","exports"],"mappings":"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","sourcesContent":["var Promise, config, credentials, crypto, flags, httpRequest, klarna, parseError, publicMethods, request, wrapper;\n\ncrypto = require('crypto');\n\nrequest = require('request');\n\nPromise = require('promise');\n\nflags = {\n  live: false,\n  initalized: false\n};\n\ncredentials = {\n  eid: null,\n  secret: null\n};\n\nconfig = {\n  purchase_country: 'SE',\n  purchase_currency: 'SEK',\n  locale: 'sv-se',\n  merchant: {\n    id: null,\n    terms_uri: null,\n    checkout_uri: null,\n    confirmation_uri: null,\n    push_uri: null\n  },\n  gui: {\n    layout: 'desktop'\n  }\n};\n\nklarna = {\n  url: {\n    test: 'https://checkout.testdrive.klarna.com/checkout/orders',\n    live: 'https://checkout.klarna.com/checkout/orders'\n  },\n  headers: {\n    contentType: 'application/vnd.klarna.checkout.aggregated-order-v2+json',\n    accept: 'application/vnd.klarna.checkout.aggregated-order-v2+json'\n  }\n};\n\n\n/* PRIVATE */\n\nhttpRequest = {\n  headers: function(payload) {\n    var biscuit, hash;\n    biscuit = payload != null ? JSON.stringify(payload) + credentials.secret : credentials.secret;\n    hash = crypto.createHash('sha256').update(biscuit, 'utf-8').digest('base64');\n    return {\n      'Accept': klarna.headers.accept,\n      'Authorization': 'Klarna ' + hash,\n      'Content-Type': klarna.headers.contentType\n    };\n  },\n  options: function(data, id) {\n    var url;\n    url = flags.live ? klarna.url.live : klarna.url.test;\n    return {\n      url: id != null ? url + '/' + id : url,\n      headers: this.headers(data),\n      body: data,\n      json: data != null ? true : false\n    };\n  }\n};\n\nwrapper = function(f) {\n  var key, ref, value;\n  if (!flags.initalized) {\n    throw 'Klarna module not initialized. Please use init() method.';\n  }\n  ref = config.merchant;\n  for (key in ref) {\n    value = ref[key];\n    if (value == null) {\n      throw \"Config error: \" + key + \" not set\";\n    }\n  }\n  return f;\n};\n\nparseError = function(error, response, body) {\n  if (error != null) {\n    return {\n      type: 'HTTP',\n      code: error.code,\n      message: error.message\n    };\n  } else if (body) {\n    body = typeof body === 'string' ? JSON.parse(body) : body;\n    return {\n      type: 'Klarna',\n      code: body.http_status_code + \" - \" + body.http_status_message,\n      message: body.internal_message\n    };\n  }\n};\n\n\n/* PUBLIC */\n\npublicMethods = {\n  init: function(input) {\n    if (input == null) {\n      throw \"Missing init values\";\n    }\n    if (input.eid != null) {\n      credentials.eid = input.eid;\n      config.merchant.id = input.eid;\n    }\n    if (input.secret != null) {\n      credentials.secret = input.secret;\n    }\n    if ((input.live != null) && typeof input.live === 'boolean') {\n      flags.live = input.live;\n    }\n    if ((input.eid != null) && (input.secret != null)) {\n      return flags.initalized = true;\n    }\n  },\n  config: function(input) {\n    if (input.purchase_country != null) {\n      config.purchase_country = input.purchase_country;\n    }\n    if (input.purchase_currency != null) {\n      config.purchase_currency = input.purchase_currency;\n    }\n    if (input.locale != null) {\n      config.locale = input.locale;\n    }\n    if (input.layout != null) {\n      if (input.layout === 'desktop' || input.layout === 'mobile') {\n        config.gui.layout = input.layout;\n      }\n    }\n    if (input.terms_uri != null) {\n      config.merchant.terms_uri = input.terms_uri;\n    }\n    if (input.cancellation_terms_uri != null) {\n      config.merchant.cancellation_terms_uri = input.cancellation_terms_uri;\n    }\n    if (input.checkout_uri != null) {\n      config.merchant.checkout_uri = input.checkout_uri;\n    }\n    if (input.confirmation_uri != null) {\n      config.merchant.confirmation_uri = input.confirmation_uri;\n    }\n    if (input.push_uri != null) {\n      return config.merchant.push_uri = input.push_uri;\n    }\n  },\n  place: function(cart) {\n    var f;\n    f = function() {\n      return new Promise(function(resolve, reject) {\n        var resource;\n        resource = config;\n        resource.cart = cart;\n        return request.post(httpRequest.options(resource), function(error, response, body) {\n          var err, location;\n          err = parseError(error, response, body);\n          if (err != null) {\n            return reject(err);\n          } else if ((response.statusCode != null) && response.statusCode === 201) {\n            location = response.headers.location;\n            return resolve(location.slice(location.lastIndexOf('/') + 1));\n          }\n        });\n      });\n    };\n    return wrapper(f)();\n  },\n  fetch: function(id) {\n    var f;\n    f = function() {\n      return new Promise(function(resolve, reject) {\n        return request.get(httpRequest.options(null, id), function(error, response, body) {\n          if (response != null) {\n            if (response.statusCode === 200) {\n              return resolve(JSON.parse(body));\n            } else {\n              return reject(parseError(error, response, body));\n            }\n          } else {\n            return reject(parseError(error, response, body));\n          }\n        });\n      });\n    };\n    return wrapper(f)();\n  },\n  update: function(id, data) {\n    var f;\n    f = function() {\n      return new Promise(function(resolve, reject) {\n        return request.post(httpRequest.options(data, id), function(error, response, body) {\n          if (response != null) {\n            if ((response.statusCode != null) && response.statusCode === 200) {\n              return resolve(body);\n            } else {\n              return reject(parseError(error, response, body));\n            }\n          } else {\n            return reject(parseError(error, response, body));\n          }\n        });\n      });\n    };\n    return wrapper(f)();\n  },\n  confirm: function(id, orderid1, orderid2) {\n    var f;\n    f = function() {\n      return new Promise(function(resolve, reject) {\n        var data;\n        data = {\n          status: 'created'\n        };\n        if (orderid1 != null) {\n          data.merchant_reference = {\n            orderid1: orderid1\n          };\n        }\n        if (orderid2 != null) {\n          data.merchant_reference.orderid2 = orderid2;\n        }\n        return publicMethods.update(id, data).then(function(order) {\n          return resolve(order);\n        }, function(error) {\n          return reject(error);\n        });\n      });\n    };\n    return wrapper(f)();\n  }\n};\n\nmodule.exports = publicMethods;\n"]},"metadata":{},"sourceType":"script"}