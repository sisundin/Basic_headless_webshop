{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/checkOut.js\";\nimport '../butterclient';\nimport React from 'react';\nimport CheckoutForm from '../ordering_components/CheckoutForm.jsx';\nimport BasketDetails from '../ordering_components/BasketDetails.js';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport history from '../history';\nimport KlarnaButton from \"../ordering_components/prebuilt/KlarnaButton.jsx\";\nimport { Helmet } from \"react-helmet\";\nimport Klarna from \"klarna-checkout\"; //************************TO DO ___ LATER ****************************/\n// Learning\n// To best leverage Stripe’s advanced fraud functionality,\n// include this script on every page, not just the checkout page.\n// This allows Stripe to detect anomalous behavior that may be indicative\n// of fraud as customers browse your website.\n// Note: This is why we are adding it to a Layout component.\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\nconst stripe = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nconst klarnapayment = async () => {\n  return (await stripe).createSource({\n    type: 'klarna',\n    amount: 816,\n    currency: 'eur',\n    klarna: {\n      product: 'payment',\n      purchase_country: 'DE'\n    },\n    source_order: {\n      items: [{\n        type: 'sku',\n        description: 'Grey cotton T-shirt',\n        quantity: 2,\n        currency: 'eur',\n        amount: 796\n      }, {\n        type: 'tax',\n        description: 'Taxes',\n        currency: 'eur',\n        amount: 20\n      }, {\n        type: 'shipping',\n        description: 'Free Shipping',\n        currency: 'eur',\n        amount: 0\n      }]\n    }\n  }).then(res => {\n    return res.source;\n  });\n};\n\nconst goklarna = function () {\n  // get the category the customer chose(using your own code)\n  //var selectedCategory = getSelectedCategory();\n  // Submit the payment for authorization with the selected category\n  Klarna.Payments.authorize({\n    payment_method_category: \"card\"\n  }, function (res) {\n    if (res.approved) {// Payment has been authorized\n    } else {\n      if (res.error) {// Payment not authorized or an error has occurred\n      } else {// handle other states\n        }\n    }\n  });\n};\n\nexport default class CheckOutView extends React.Component {\n  constructor(props) {\n    super();\n    this.props = props;\n    this.cK = klarnapayment().finally(res => {\n      return res.klarna.client_token;\n    });\n  }\n\n  async componentDidMount() {\n    console.log(this.cK); // Initialize the SDK\n\n    Klarna.Payments.init({\n      client_token: this.cK\n    });\n    console.log(\"hej\"); // Load the widget for each payment method category:\n    // - pay_later\n    // - pay_over_time\n    // - pay_now\n\n    var available_categories = klarnapayment.klarna.payment_method_category.split(',');\n\n    for (var category of available_categories) {\n      Klarna.Payments.load({\n        container: \"#klarna_\" + category + \"_container\",\n        payment_method_category: category\n      }, function (res) {\n        if (res.show_form) {\n          console.log(\"heejj\");\n          /*\n          * this payment method category can be used, allow the customer\n          * to choose it in your interface.\n          */\n        } else {// this payment method category is not available\n          }\n      });\n    }\n  }\n\n  render() {\n    let totalPrice = 0;\n    console.log(klarnapayment()); //.then((res) =>{ \n    //console.log(res);\n    //console.log(klarnapayment(res));\n    //});\n    //totalPrice = this.props.model.getTotalBasketprice();\n    // comment toself: lägg in klarna här sedan\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://x.klarnacdn.net/kp/lib/v1/api.js\",\n      async: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageTopDivider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        \"margin-right\": \"0px\",\n        \"margin-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xl-6\",\n      style: {\n        \"padding-right\": \"0px\",\n        \"padding-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BasketDetails, {\n      model: this.props.model,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xl-6\",\n      style: {\n        \"padding-right\": \"0px\",\n        \"padding-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Elements, {\n      stripe: stripePromise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KlarnaButton, {\n      id: \"pay-button\",\n      onClick: () => goklarna(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, \"Pay using Klarna\"), /*#__PURE__*/React.createElement(CheckoutForm, {\n      price: totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/checkOut.js"],"names":["React","CheckoutForm","BasketDetails","Elements","loadStripe","history","KlarnaButton","Helmet","Klarna","stripePromise","process","env","REACT_APP_PUBLISHABLE_KEY","stripe","klarnapayment","createSource","type","amount","currency","klarna","product","purchase_country","source_order","items","description","quantity","then","res","source","goklarna","Payments","authorize","payment_method_category","approved","error","CheckOutView","Component","constructor","props","cK","finally","client_token","componentDidMount","console","log","init","available_categories","split","category","load","container","show_form","render","totalPrice","model","sleep","milliseconds","date","Date","now","currentDate"],"mappings":"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","sourcesContent":["import '../butterclient';\nimport React from 'react'\nimport CheckoutForm from '../ordering_components/CheckoutForm.jsx'\nimport BasketDetails from '../ordering_components/BasketDetails.js'\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport history from '../history';\nimport KlarnaButton from \"../ordering_components/prebuilt/KlarnaButton.jsx\";\nimport {Helmet} from \"react-helmet\";\nimport Klarna from \"klarna-checkout\";\n\n//************************TO DO ___ LATER ****************************/\n// Learning\n// To best leverage Stripe’s advanced fraud functionality,\n// include this script on every page, not just the checkout page.\n// This allows Stripe to detect anomalous behavior that may be indicative\n// of fraud as customers browse your website.\n// Note: This is why we are adding it to a Layout component.\n\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\nconst stripe = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\n\nconst klarnapayment = async () => {\n  return (await stripe).createSource({\n  type: 'klarna',\n  amount: 816,\n  currency: 'eur',\n  klarna: {\n    product: 'payment',\n    purchase_country: 'DE',\n  },\n\n  source_order: {\n    items: [{\n      type: 'sku',\n      description: 'Grey cotton T-shirt',\n      quantity: 2,\n      currency: 'eur',\n      amount: 796,\n   }, {\n      type: 'tax',\n      description: 'Taxes',\n      currency: 'eur',\n      amount: 20,\n   }, {\n      type: 'shipping',\n      description: 'Free Shipping',\n      currency: 'eur',\n      amount: 0,\n   }]\n  }, \n  \n}).then((res)=>{\n  \n  return res.source;\n})};\n\n\nconst goklarna =  function(){\n  // get the category the customer chose(using your own code)\n  //var selectedCategory = getSelectedCategory();\n  // Submit the payment for authorization with the selected category\n  Klarna.Payments.authorize({\n    payment_method_category: \"card\"\n  }, function(res) {\n    if (res.approved) {\n      // Payment has been authorized\n    } else {\n      if (res.error) {\n        // Payment not authorized or an error has occurred\n      } else {\n        // handle other states\n      }\n    }\n  })\n};\n\n\n\n\nexport default class CheckOutView extends React.Component {\n  constructor(props){\n    super();\n    this.props = props;\n    this.cK = klarnapayment().finally((res) => {return res.klarna.client_token});\n    }\n\n   async componentDidMount(){\n    console.log(this.cK);\n    // Initialize the SDK\n    Klarna.Payments.init({\n      client_token: this.cK\n    });\n    console.log(\"hej\");\n    // Load the widget for each payment method category:\n    // - pay_later\n    // - pay_over_time\n    // - pay_now\n    var available_categories = klarnapayment.klarna.payment_method_category.split(',');\n    for (var category of available_categories) {\n      Klarna.Payments.load({\n        container: \"#klarna_\" + category + \"_container\",\n        payment_method_category: category,\n      }, function(res) {\n        if (res.show_form) {\n          console.log(\"heejj\");\n          /*\n          * this payment method category can be used, allow the customer\n          * to choose it in your interface.\n          */\n        } else {\n          // this payment method category is not available\n        }\n      });\n    }\n  };\n   \n  render() {\n    let totalPrice = 0;\n    console.log(klarnapayment());\n\n    //.then((res) =>{ \n      //console.log(res);\n      //console.log(klarnapayment(res));\n    //});\n    //totalPrice = this.props.model.getTotalBasketprice();\n    \n\n    // comment toself: lägg in klarna här sedan\n    return <>\n    <Helmet>   \n    \n    <script src=\"https://x.klarnacdn.net/kp/lib/v1/api.js\" async></script>\n    </Helmet>\n\n        <div>\n          <div className=\"pageTopDivider\"></div>\n            <div class=\"row\" style={{\"margin-right\": \"0px\", \"margin-left\":\"0px\"}}>\n              <div class=\"col-xl-6\" style={{\"padding-right\": \"0px\", \"padding-left\":\"0px\"}}>  \n                <div style={{\"text-align\": \"center\"}}>       \n                  <BasketDetails model={this.props.model} />\n                </div> \n              </div>\n              <div class=\"col-xl-6\" style={{\"padding-right\": \"0px\", \"padding-left\":\"0px\"}}>\n              <Elements stripe={stripePromise}>\n                  <KlarnaButton id={\"pay-button\"} onClick={()=> goklarna()}> \n                    Pay using Klarna \n                  </KlarnaButton>\n                  \n                  <CheckoutForm price={ totalPrice}/> \n                  \n                </Elements>\n                </div>\n              </div>\n        </div>\n    </>\n  }\n}\n\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}"]},"metadata":{},"sourceType":"module"}