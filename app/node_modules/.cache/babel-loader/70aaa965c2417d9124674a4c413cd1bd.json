{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/ordering_components/CheckoutForm.jsx\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport styled from \"@emotion/styled\";\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport KlarnaButton from \"./prebuilt/KlarnaButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\nexport default function CheckoutForm({\n  price\n}) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window.fetch(\"http://localhost:4242/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"xl-tshirt\"\n        }]\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setClientSecret(data.clientSecret);\n    });\n  }, []);\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        postal_code: ev.target.zip.value\n      },\n      phone: ev.target.phone.value\n    };\n    console.log(billingDetails);\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: billingDetails\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      window.location.replace(\"http://localhost:3000/success\");\n    }\n  };\n\n  const CardElementContainer = styled.div`\n  display: flex;\n  align-items: center;\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n  const iframeStyles = {\n    base: {\n      iconColor: \"black\",\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#FFC7EE\",\n      color: \"#FFC7EE\"\n    },\n    complete: {\n      iconColor: \"#cbf4c9\"\n    }\n  };\n  const cardElementOpts = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \" Or pay with card \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BillingDetailsFields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    id: \"card-element\",\n    options: cardElementOpts,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    disabled: processing || disabled || succeeded,\n    id: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }) : \"Pay with card\"), \" \", price))));\n}\n;","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/ordering_components/CheckoutForm.jsx"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","styled","Row","BillingDetailsFields","SubmitButton","KlarnaButton","CheckoutError","CheckoutForm","price","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","window","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","handleChange","event","empty","message","handleSubmit","ev","preventDefault","billingDetails","name","target","value","email","address","city","line1","postal_code","zip","phone","console","log","payload","confirmCardPayment","payment_method","card","getElement","billing_details","location","replace","CardElementContainer","div","iframeStyles","base","iconColor","color","invalid","complete","cardElementOpts","iconStyle","style","hidePostalCode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  useState, \n  useEffect } from \"react\";\nimport { \n  CardElement, \n  useStripe, \n  useElements } from \"@stripe/react-stripe-js\";\nimport styled from \"@emotion/styled\";\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport KlarnaButton from \"./prebuilt/KlarnaButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\n\nexport default function CheckoutForm({ price }) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\"http://localhost:4242/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({items: [{ id: \"xl-tshirt\" }]})\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret);\n      });\n  }, [])\n\n\n  \n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n\n  const handleSubmit = async ev => {\n\n    ev.preventDefault();\n\n\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        postal_code: ev.target.zip.value\n      },\n      phone: ev.target.phone.value\n    };\n\n    console.log(billingDetails)\n\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: billingDetails\n\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      window.location.replace(\"http://localhost:3000/success\");\n\n\n    }\n  };\n\n  const CardElementContainer = styled.div`\n  display: flex;\n  align-items: center;\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\n  const iframeStyles = {\n    base: {\n      iconColor: \"black\",\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#FFC7EE\",\n      color: \"#FFC7EE\"\n    },\n    complete: {\n      iconColor: \"#cbf4c9\"\n    }\n  };\n\n  const cardElementOpts = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true,\n  \n  };\n\n  return (\n    <div>\n      <h6> Or pay with card </h6>\n\n\n      <form onSubmit={handleSubmit}>\n      <div class=\"text-center\"> \n        <Row>\n          <BillingDetailsFields/>\n        </Row>\n      </div>\n        <Row>\n        <CardElement id=\"card-element\" options={cardElementOpts} onChange={handleChange} />\n          <SubmitButton\n            disabled={processing || disabled || succeeded}\n            id=\"submit\"\n          >\n            <span id=\"button-text\">\n              {processing ? (\n                <div className=\"spinner\" id=\"spinner\"></div>\n              ) : (\n                \"Pay with card\"\n              )}\n            </span> {price}\n          </SubmitButton>\n      </Row>\n      </form>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}