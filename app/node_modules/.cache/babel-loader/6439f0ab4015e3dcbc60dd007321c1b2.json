{"ast":null,"code":"import React from \"react\";\n\nclass StoreModel extends React.Component {\n  constructor(state) {\n    super();\n    this.subscribers = [];\n    this.state = state;\n  }\n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter(o => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size = \"n/a\", amount = 1) {\n    let bask = this.state.basket;\n    console.log(bask);\n    let newbask = this.state.basket.push(prod);\n    this.setState({\n      basket: newbask\n    });\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      state: this.state\n    }));\n  }\n\n  removeFromBasket(productid) {}\n\n  clearBasket() {\n    let bask = {\n      basket: []\n    };\n    this.setState(bask);\n    console.log(this.state);\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      state: this.state\n    }));\n  }\n\n  getBasket() {\n    return [...this.state.basket];\n  }\n\n  getBasketItemNumber() {\n    return this.state.basket.length;\n  }\n\n}\n\nconst modelString = localStorage.getItem(\"The_coolest_store\");\nlet modelObject = JSON.parse(modelString);\nmodelObject ? console.log(\"User data detected\") : modelObject = {\n  state: {\n    basket: []\n  }\n};\nconst storeModel = new StoreModel(modelObject.state);\nexport default storeModel;","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/src/model_more/model.js"],"names":["React","StoreModel","Component","constructor","state","subscribers","addObserver","callback","push","removeObserver","filter","o","notifyObservers","whatHappened","forEach","addToBasket","prod","size","amount","bask","basket","console","log","newbask","setState","localStorage","setItem","JSON","stringify","removeFromBasket","productid","clearBasket","getBasket","getBasketItemNumber","length","modelString","getItem","modelObject","parse","storeModel"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AAGA,SAAKC,WAAL,GAAmB,EAAnB;AAGA,SAAKD,KAAL,GAAaA,KAAb;AACD;;AAIDE,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,SAAKF,WAAL,CAAiBG,IAAjB,CAAsBD,QAAtB;AACD;;AAEDE,EAAAA,cAAc,CAACF,QAAD,EAAW;AACvBA,IAAAA,QAAQ,GAAG,KAAKF,WAAL,CAAiBK,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,KAAKJ,QAArC,CAAX;AACD;;AAEDK,EAAAA,eAAe,CAACC,YAAD,EAAe;AAC5B,SAAKR,WAAL,CAAiBS,OAAjB,CAAyB,UAAUP,QAAV,EAAoB;AAC3CA,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACD,KAFD;AAGD;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAI,GAAC,KAAZ,EAAmBC,MAAM,GAAC,CAA1B,EAA4B;AACrC,QAAIC,IAAI,GAAG,KAAKf,KAAL,CAAWgB,MAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAII,OAAO,GAAG,KAAKnB,KAAL,CAAWgB,MAAX,CAAkBZ,IAAlB,CAAuBQ,IAAvB,CAAd;AACA,SAAKQ,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAGG;AAAV,KAAd;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EACIC,IAAI,CAACC,SAAL,CAAe;AAACxB,MAAAA,KAAK,EAAG,KAAKA;AAAd,KAAf,CADJ;AAED;;AAEDyB,EAAAA,gBAAgB,CAACC,SAAD,EAAW,CAE1B;;AAEAC,EAAAA,WAAW,GAAE;AACZ,QAAIZ,IAAI,GAAG;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAX;AACA,SAAKI,QAAL,CAAcL,IAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AAEAqB,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAe;AAACxB,MAAAA,KAAK,EAAG,KAAKA;AAAd,KAAf,CAA1C;AAED;;AAED4B,EAAAA,SAAS,GAAE;AACT,WAAO,CAAC,GAAG,KAAK5B,KAAL,CAAWgB,MAAf,CAAP;AACD;;AAEDa,EAAAA,mBAAmB,GAAE;AACnB,WAAO,KAAK7B,KAAL,CAAWgB,MAAX,CAAkBc,MAAzB;AACD;;AAvDsC;;AA8DzC,MAAMC,WAAW,GAAEV,YAAY,CAACW,OAAb,CAAqB,mBAArB,CAAnB;AACA,IAAIC,WAAW,GAAEV,IAAI,CAACW,KAAL,CAAWH,WAAX,CAAjB;AACAE,WAAW,GAAChB,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAD,GAAoCe,WAAW,GAAE;AAACjC,EAAAA,KAAK,EAAE;AAAEgB,IAAAA,MAAM,EAAC;AAAT;AAAR,CAA5D;AAEA,MAAMmB,UAAU,GAAG,IAAItC,UAAJ,CAAeoC,WAAW,CAACjC,KAA3B,CAAnB;AACA,eAAemC,UAAf","sourcesContent":["import React from \"react\";\n\n\nclass StoreModel extends React.Component {\n  constructor(state) {\n    super();\n    \n    \n    this.subscribers = [];\n    \n    \n    this.state = state\n  }\n\n  \n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter((o) => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size=\"n/a\", amount=1){\n    let bask = this.state.basket;\n    console.log(bask);\n    let newbask = this.state.basket.push(prod);\n    this.setState({basket : newbask});\n    localStorage.setItem(\"The_coolest_store\", \n        JSON.stringify({state : this.state}))\n  }\n\n  removeFromBasket(productid){\n\n  }\n\n   clearBasket(){\n    let bask = {basket:[]};\n    this.setState(bask);\n    console.log(this.state);\n\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({state : this.state}))\n  \n  }\n\n  getBasket(){\n    return [...this.state.basket];\n  }\n\n  getBasketItemNumber(){\n    return this.state.basket.length;\n  }\n\n\n \n\n}\n\nconst modelString= localStorage.getItem(\"The_coolest_store\");\nlet modelObject= JSON.parse(modelString);\nmodelObject?console.log(\"User data detected\"): modelObject= {state: { basket:[]}}\n\nconst storeModel = new StoreModel(modelObject.state);\nexport default storeModel;\n\n"]},"metadata":{},"sourceType":"module"}