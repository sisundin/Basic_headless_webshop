{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/home.js\";\nimport React, { Component } from \"react\";\nimport Butter from 'buttercms';\nimport '../butterclient';\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77');\nexport default class HomeView extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      data: {\n        slug: \"home\",\n        name: \"Home\",\n        page_type: null,\n        fields: {\n          homepage: {\n            homesegments: [{\n              homesegment: \"<h>Loading...</h>\\n<img src=\\\" \\\"/>\\n<p>Hang in there!</p>\\n\"\n            }]\n          }\n        }\n      },\n      sitePosition: \"home\"\n    };\n    this.getPageLink();\n    this.getPageInformation(this.state.sitePosition);\n  }\n\n  getPageLink() {\n    let currentPageLocation = window.location.href;\n    let ProcessedCurrentPageLocation = currentPageLocation.replace(\"http://localhost:3000/\", \"\");\n    let link = {\n      Position: {\n        sitePosition: ProcessedCurrentPageLocation\n      }\n    };\n\n    if (link.sitePosition !== \"\") {\n      this.state.sitePosition = ProcessedCurrentPageLocation;\n    }\n  }\n\n  setError(err) {\n    let pagenotFond = {\n      data: {\n        slug: \"home\",\n        name: \"Home\",\n        page_type: null,\n        fields: {\n          sitetype: \"html-page\",\n          aboutpage: '<div className=\"pageWrapper\"><div className=\"pageTopDivider\"></div><div className=\"text-center\"><h className=\"headerPageText\" >' + err.error.response.status + \" \" + err.error.response.statusText + '</h><a href=\"/\"><h1>Click here to go to homepage</h1></a></div></div>'\n        }\n      }\n    };\n    return pagenotFond;\n  }\n\n  setData(resp) {\n    if (resp.data !== this.state.data) {\n      this.setState(resp.data);\n    }\n  }\n\n  async getPageInformation(link) {\n    if (link === \"\") {\n      link = \"home\";\n    }\n\n    this.props.model.getPageInformation(link).then(resp => this.setData(resp)).catch(err => this.setState(this.setError({\n      error: err\n    })));\n  }\n\n  CreatePage(pagedata) {\n    //let data = this.state.data;\n    let pagecontent = Object.values(pagedata);\n    let containor = /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: pagecontent\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    });\n    return containor; //pagedata.map(p => {return p.homesegment});\n    //data.map(page => {console.log(page, page.map((pagesegment) =>{pagesegment}))})\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageTopDivider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.data.fields.homepage.homesegments.map(homesegment => this.CreatePage(homesegment))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/home.js"],"names":["React","Component","Butter","butter","HomeView","constructor","props","state","data","slug","name","page_type","fields","homepage","homesegments","homesegment","sitePosition","getPageLink","getPageInformation","currentPageLocation","window","location","href","ProcessedCurrentPageLocation","replace","link","Position","setError","err","pagenotFond","sitetype","aboutpage","error","response","status","statusText","setData","resp","setState","model","then","catch","CreatePage","pagedata","pagecontent","Object","values","containor","__html","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Butter from 'buttercms';\nimport '../butterclient';\n\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77')\n\n\nexport default class HomeView extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.props = props;\n        this.state = { data:{\n        slug: \"home\",\n        name: \"Home\",\n        page_type: null,\n        fields: {\n          homepage: {\n            homesegments: [\n              {\n                homesegment: \"<h>Loading...</h>\\n<img src=\\\" \\\"/>\\n<p>Hang in there!</p>\\n\"\n              }\n            ]\n          }\n        }}, \n        sitePosition : \"home\"\n                      };\n                    \n        this.getPageLink();\n        this.getPageInformation(this.state.sitePosition);\n        \n        \n      }\n  \n      \n    getPageLink(){\n        let currentPageLocation = window.location.href;\n        let ProcessedCurrentPageLocation = currentPageLocation.replace(\"http://localhost:3000/\", \"\")\n        let link = {Position:{sitePosition : ProcessedCurrentPageLocation} }\n          if(link.sitePosition !== \"\"){\n            this.state.sitePosition = ProcessedCurrentPageLocation;\n          }\n      }\n\n      setError(err){\n        let pagenotFond = {data:{\n          slug: \"home\",\n          name: \"Home\",\n          page_type: null,\n          fields: {\n            sitetype: \"html-page\",\n            aboutpage: '<div className=\"pageWrapper\"><div className=\"pageTopDivider\"></div><div className=\"text-center\"><h className=\"headerPageText\" >' + err.error.response.status + \" \" +err.error.response.statusText + '</h><a href=\"/\"><h1>Click here to go to homepage</h1></a></div></div>' \n          }}}\n\n          return pagenotFond\n\n      }\n\n      setData(resp){\n        if (resp.data !== this.state.data){\n          this.setState(resp.data);\n        }\n\n      }\n  \n\n  async getPageInformation(link) {\n      if (link===\"\"){link=\"home\"}\n      this.props.model.getPageInformation(link).then(resp => this.setData(resp)).catch(err=>this.setState(this.setError({error:err})));\n      \n\n    }\n\n    CreatePage(pagedata){\n      //let data = this.state.data;\n      \n      let pagecontent = Object.values(pagedata);\n    let containor = <div dangerouslySetInnerHTML={{ __html: pagecontent}} />\n      \n  \n      return (containor) //pagedata.map(p => {return p.homesegment});\n      //data.map(page => {console.log(page, page.map((pagesegment) =>{pagesegment}))})\n    }\n  \n\n  render() {\n    \n    return (\n      <div className=\"pageWrapper\">        \n        <div className=\"pageTopDivider\"></div>\n        <div className=\"center\">\n        \n        {this.state.data.fields.homepage.homesegments.map(homesegment=> this.CreatePage(homesegment))} \n       \n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"divider\"></div>\n      </div>\n    );\n  }\n\n \n}\n\n"]},"metadata":{},"sourceType":"module"}