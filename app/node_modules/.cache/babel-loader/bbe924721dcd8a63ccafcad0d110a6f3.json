{"ast":null,"code":"import React from \"react\";\n\nclass StoreModel extends React.Component {\n  constructor(props) {\n    super();\n    this.subscribers = [];\n    this.state = {\n      basket: props.basket\n    };\n    console.log(this.state);\n  }\n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter(o => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size = \"n/a\", amount = 1) {\n    let productthatexisted = this.state.basket.filter(produc => produc.prod === prod || produc.sizeselected === size);\n    let bask = this.state.basket.filter(produc => produc.prod !== prod || produc.sizeselected !== size);\n    let productObject = {\n      prod,\n      sizeselected: size,\n      amountorderd: amount\n    };\n\n    if (productthatexisted.length !== 0) {\n      let combinedamount = amount + productthatexisted[0].amountorderd;\n      productObject = {\n        prod,\n        sizeselected: size,\n        amountorderd: combinedamount\n      };\n    }\n\n    console.log(\"bask\");\n    console.log(bask);\n    console.log(\"productthatexisted\");\n    console.log(productthatexisted);\n    console.log(\"productObject\");\n    console.log(productObject);\n    this.state.basket = [...bask, productObject];\n    console.log(this.state);\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify(this.state.basket));\n  }\n\n  removeFromBasket(productid) {}\n\n  clearBasket() {\n    this.state.basket = [];\n    console.log(this.state);\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      basket: []\n    }));\n  }\n\n  getBasket() {\n    return [...this.state.basket];\n  }\n\n  getBasketItemNumber() {\n    return this.state.basket.length;\n  }\n\n}\n\nconst modelString = localStorage.getItem(\"The_coolest_store\");\nlet modelObject = JSON.parse(modelString);\nmodelObject ? console.log(\"User data detected\") : modelObject = {\n  basket: []\n};\nconst storeModel = new StoreModel(modelObject);\nexport default storeModel;","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/src/model_more/model.js"],"names":["React","StoreModel","Component","constructor","props","subscribers","state","basket","console","log","addObserver","callback","push","removeObserver","filter","o","notifyObservers","whatHappened","forEach","addToBasket","prod","size","amount","productthatexisted","produc","sizeselected","bask","productObject","amountorderd","length","combinedamount","localStorage","setItem","JSON","stringify","removeFromBasket","productid","clearBasket","getBasket","getBasketItemNumber","modelString","getItem","modelObject","parse","storeModel"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nclass StoreModel extends React.Component {\n  constructor(props) {\n    super();\n    this.subscribers = [];\n    this.state = {basket: props.basket};\n    console.log(this.state);\n  }\n\n  \n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter((o) => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size=\"n/a\", amount=1){\n    let productthatexisted = this.state.basket.filter(produc => produc.prod === prod || produc.sizeselected === size);\n    let bask = this.state.basket.filter(produc => produc.prod !== prod || produc.sizeselected !== size);\n    let productObject = {prod , sizeselected:size, amountorderd:amount }\n    if (productthatexisted.length !== 0){\n      let combinedamount = amount + productthatexisted[0].amountorderd \n      productObject = {prod , sizeselected:size, amountorderd:combinedamount}\n    }\n    console.log(\"bask\")\n    console.log(bask);\n    console.log(\"productthatexisted\")\n    console.log(productthatexisted)\n    console.log(\"productObject\")\n    console.log(productObject);\n    this.state.basket = [...bask, productObject];\n    console.log(this.state);\n    localStorage.setItem(\"The_coolest_store\", \n        JSON.stringify( this.state.basket))\n  }\n\n  removeFromBasket(productid){\n\n  }\n\n   clearBasket(){\n    this.state.basket = [];\n    console.log(this.state);\n\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({basket:[]}))\n  \n  }\n\n  getBasket(){\n    return [...this.state.basket];\n  }\n\n  getBasketItemNumber(){\n    \n    return this.state.basket.length;\n  }\n\n\n \n\n}\n\nconst modelString= localStorage.getItem(\"The_coolest_store\");\nlet modelObject= JSON.parse(modelString);\nmodelObject?console.log(\"User data detected\"): modelObject= {basket:[]}\nconst storeModel = new StoreModel(modelObject);\nexport default storeModel;\n\n"]},"metadata":{},"sourceType":"module"}