{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/checkOut.js\";\nimport '../butterclient';\nimport React from 'react';\nimport CheckoutForm from '../ordering_components/CheckoutForm.jsx';\nimport BasketDetails from '../ordering_components/BasketDetails.js';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport history from '../history';\nimport KlarnaButton from \"../ordering_components/prebuilt/KlarnaButton.jsx\";\nimport { Helmet } from \"react-helmet\"; //************************TO DO ___ LATER ****************************/\n// Learning\n// To best leverage Stripe’s advanced fraud functionality,\n// include this script on every page, not just the checkout page.\n// This allows Stripe to detect anomalous behavior that may be indicative\n// of fraud as customers browse your website.\n// Note: This is why we are adding it to a Layout component.\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\nconsole.log(stripePromise);\nexport default class CheckOutView extends React.Component {\n  constructor(props) {\n    super();\n    this.props = props;\n  }\n\n  async klarnapay() {\n    window.klarnaAsyncCallback = function () {\n      // Initialize the SDK\n      Klarna.Payments.init({\n        client_token: source.klarna.client_token\n      }); // Load the widget for each payment method category:\n      // - pay_later\n      // - pay_over_time\n      // - pay_now\n\n      var available_categories = source.klarna.payment_method_category.split(',');\n\n      for (var category of available_categories) {\n        Klarna.Payments.load({\n          container: \"#klarna_\" + category + \"_container\",\n          payment_method_category: category\n        }, function (res) {\n          if (res.show_form) {\n            /*\n            * this payment method category can be used, allow the customer\n            * to choose it in your interface.\n            */\n          } else {// this payment method category is not available\n            }\n        });\n      }\n    };\n\n    document.getElementByID(\"pay-button\").addEventListener(\"click\", function () {\n      // get the category the customer chose(using your own code)\n      var selectedCategory = getSelectedCategory(); // Submit the payment for authorization with the selected category\n\n      Klarna.Payments.authorize({\n        payment_method_category: selectedCategory\n      }, function (res) {\n        if (res.approved) {// Payment has been authorized\n        } else {\n          if (res.error) {// Payment not authorized or an error has occurred\n          } else {// handle other states\n            }\n        }\n      });\n    });\n  }\n\n  render() {\n    let totalPrice = 0;\n    totalPrice = this.props.model.getTotalBasketprice();\n    this.klarnapay(); // comment toself: lägg in klarna här sedan\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://x.klarnacdn.net/kp/lib/v1/api.js\",\n      async: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageTopDivider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        \"margin-right\": \"0px\",\n        \"margin-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xl-6\",\n      style: {\n        \"padding-right\": \"0px\",\n        \"padding-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BasketDetails, {\n      model: this.props.model,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xl-6\",\n      style: {\n        \"padding-right\": \"0px\",\n        \"padding-left\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Elements, {\n      stripe: stripePromise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KlarnaButton, {\n      id: \"pay-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"Pay\"), /*#__PURE__*/React.createElement(CheckoutForm, {\n      price: totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/site_pages/checkOut.js"],"names":["React","CheckoutForm","BasketDetails","Elements","loadStripe","history","KlarnaButton","Helmet","stripePromise","process","env","REACT_APP_PUBLISHABLE_KEY","console","log","CheckOutView","Component","constructor","props","klarnapay","window","klarnaAsyncCallback","Klarna","Payments","init","client_token","source","klarna","available_categories","payment_method_category","split","category","load","container","res","show_form","document","getElementByID","addEventListener","selectedCategory","getSelectedCategory","authorize","approved","error","render","totalPrice","model","getTotalBasketprice"],"mappings":"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","sourcesContent":["import '../butterclient';\nimport React from 'react'\nimport CheckoutForm from '../ordering_components/CheckoutForm.jsx'\nimport BasketDetails from '../ordering_components/BasketDetails.js'\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport history from '../history';\nimport KlarnaButton from \"../ordering_components/prebuilt/KlarnaButton.jsx\";\nimport {Helmet} from \"react-helmet\";\n\n\n\n//************************TO DO ___ LATER ****************************/\n// Learning\n// To best leverage Stripe’s advanced fraud functionality,\n// include this script on every page, not just the checkout page.\n// This allows Stripe to detect anomalous behavior that may be indicative\n// of fraud as customers browse your website.\n// Note: This is why we are adding it to a Layout component.\n\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\n\nconsole.log(stripePromise)\n\n\n\nexport default class CheckOutView extends React.Component {\n  constructor(props){\n    super();\n    this.props = props;\n    }\n  async klarnapay(){\n\n    window.klarnaAsyncCallback = function () {\n\n      // Initialize the SDK\n      Klarna.Payments.init({\n        client_token: source.klarna.client_token,\n      });\n    \n      // Load the widget for each payment method category:\n      // - pay_later\n      // - pay_over_time\n      // - pay_now\n      var available_categories = source.klarna.payment_method_category.split(',');\n      for (var category of available_categories) {\n        Klarna.Payments.load({\n          container: \"#klarna_\" + category + \"_container\",\n          payment_method_category: category,\n        }, function(res) {\n          if (res.show_form) {\n            /*\n            * this payment method category can be used, allow the customer\n            * to choose it in your interface.\n            */\n          } else {\n            // this payment method category is not available\n          }\n        });\n      }\n    };\n    \n    document.getElementByID(\"pay-button\").addEventListener(\"click\", function(){\n      // get the category the customer chose(using your own code)\n      var selectedCategory = getSelectedCategory();\n      // Submit the payment for authorization with the selected category\n      Klarna.Payments.authorize({\n        payment_method_category: selectedCategory\n      }, function(res) {\n        if (res.approved) {\n          // Payment has been authorized\n        } else {\n          if (res.error) {\n            // Payment not authorized or an error has occurred\n          } else {\n            // handle other states\n          }\n        }\n      })\n    });\n  }\n  render() {\n    let totalPrice = 0;\n    totalPrice = this.props.model.getTotalBasketprice();\n    this.klarnapay();\n    // comment toself: lägg in klarna här sedan\n    return <>\n    <Helmet>\n<script src=\"https://x.klarnacdn.net/kp/lib/v1/api.js\" async></script>\n    </Helmet>\n\n        <div>\n          <div className=\"pageTopDivider\"></div>\n            <div class=\"row\" style={{\"margin-right\": \"0px\", \"margin-left\":\"0px\"}}>\n              <div class=\"col-xl-6\" style={{\"padding-right\": \"0px\", \"padding-left\":\"0px\"}}>  \n                <div style={{\"text-align\": \"center\"}}>       \n                  <BasketDetails model={this.props.model} />\n                </div> \n              </div>\n              <div class=\"col-xl-6\" style={{\"padding-right\": \"0px\", \"padding-left\":\"0px\"}}>\n              <Elements stripe={stripePromise}>\n                  <KlarnaButton id={\"pay-button\"}> \n                    Pay \n                  </KlarnaButton>\n                  \n                  <CheckoutForm price={ totalPrice}/> \n                  \n                </Elements>\n                </div>\n              </div>\n        </div>\n    </>\n  }\n}"]},"metadata":{},"sourceType":"module"}