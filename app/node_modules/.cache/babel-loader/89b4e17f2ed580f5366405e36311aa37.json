{"ast":null,"code":"import React from \"react\";\nimport '../butterclient';\nimport Butter from 'buttercms';\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77');\n\nclass StoreModel extends React.Component {\n  constructor(props) {\n    super();\n    this.subscribers = [];\n    this.state = {\n      basket: props.basket\n    };\n    this.initialbasket = [];\n    this.getproducts();\n  }\n\n  getproducts() {\n    let collecteditems = [];\n    let pagesToCheck = [\"shop\"];\n    pagesToCheck.map(toCheck => {\n      console.log(toCheck);\n      this.getPageInformation(toCheck).then(v => {\n        console.log(v);\n        collecteditems = [...collecteditems, ...v.data.data.fields.subcategory.product_in_subcategory];\n        console.log(collecteditems);\n      }).catch(e => {\n        console.log(e);\n        this.clearBasket();\n      }).finally(() => {\n        this.initialbasket = collecteditems;\n      });\n    });\n  }\n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter(o => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size = \"n/a\", amount = 1) {\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && produc.sizeselected === size);\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && produc.sizeselected === size));\n    let productObject = {\n      prod,\n      sizeselected: size,\n      amountorderd: amount\n    };\n\n    if (productthatexisted.length !== 0) {\n      let combinedamount = amount + productthatexisted[0].amountorderd;\n      productObject = {\n        prod,\n        sizeselected: size,\n        amountorderd: combinedamount\n      };\n    }\n\n    this.state.basket = [...bask, productObject];\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      basket: [...this.state.basket]\n    }));\n    this.notifyObservers({\n      added: productObject\n    });\n  }\n\n  removeFromBasket(prod, size) {\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && produc.sizeselected === size));\n    this.state.basket = [...bask];\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      basket: [...this.state.basket]\n    }));\n    this.notifyObservers({\n      removed: prod\n    });\n  }\n\n  addQuantatieOfProduct(prod, size, change) {\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && produc.sizeselected === size);\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && produc.sizeselected === size));\n    let productObject = {\n      prod,\n      sizeselected: size,\n      amountorderd: 1\n    };\n    let combinedamount = 1;\n\n    if (productthatexisted.length !== 0) {\n      combinedamount = productthatexisted[0].amountorderd + change;\n\n      if (combinedamount <= 1) {\n        combinedamount = 1;\n      }\n\n      productObject = {\n        prod,\n        sizeselected: size,\n        amountorderd: combinedamount\n      };\n    }\n\n    this.state.basket = [...bask, productObject];\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      basket: [...this.state.basket]\n    }));\n    this.notifyObservers({\n      changed: prod\n    });\n  }\n\n  clearBasket() {\n    this.state.basket = [];\n    console.log(this.state);\n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({\n      basket: []\n    }));\n  }\n\n  getTotalBasketprice() {\n    let basket = this.getBasket();\n    let price = basket.reduce((a, product) => a += product.prod.product_price * product.amountorderd, 0);\n    return Math.round((price + Number.EPSILON) * 100) / 100;\n  }\n\n  isItemInBasket(prod, size) {\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && produc.sizeselected === size);\n\n    if (productthatexisted.length !== 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async getPageInformation(link) {\n    return await butter.page.retrieve('*', '' + link + '');\n  }\n\n  getBasket() {\n    let apiProducts = [...this.initialbasket];\n    console.log(apiProducts);\n    let correctProducts = [];\n    let basket = [...this.state.basket];\n    basket.forEach(productinbasket => {\n      correctProducts = [...correctProducts, {\n        sizeselected: productinbasket.sizeselected,\n        amountorderd: productinbasket.amountorderd,\n        prod: apiProducts.find(collecteditem => productinbasket.prod.product_id === collecteditem.product_id)\n      }];\n    });\n    return this.sortbasket(correctProducts);\n  }\n\n  sortbasket(basket) {\n    return basket.sort((a, b) => {\n      if (a.prod.product_name > b.prod.product_name) {\n        return +1;\n      }\n\n      if (a.prod.product_name < b.prod.product_name) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  getBasketItemNumber() {\n    return this.state.basket.length;\n  }\n\n}\n\nconst modelString = localStorage.getItem(\"The_coolest_store\");\nlet modelObject = JSON.parse(modelString);\nmodelObject ? console.log(\"User data detected\") : modelObject = {\n  basket: []\n};\nconst storeModel = new StoreModel(modelObject);\nexport default storeModel;\n\nfunction deepEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n    const areObjects = isObject(val1) && isObject(val2);\n\n    if (areObjects && !deepEqual(val1, val2) || !areObjects && val1 !== val2) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isObject(object) {\n  return object != null && typeof object === 'object';\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/projekt_gr-n/app/src/model_more/model.js"],"names":["React","Butter","butter","StoreModel","Component","constructor","props","subscribers","state","basket","initialbasket","getproducts","collecteditems","pagesToCheck","map","toCheck","console","log","getPageInformation","then","v","data","fields","subcategory","product_in_subcategory","catch","e","clearBasket","finally","addObserver","callback","push","removeObserver","filter","o","notifyObservers","whatHappened","forEach","addToBasket","prod","size","amount","productthatexisted","produc","deepEqual","sizeselected","bask","productObject","amountorderd","length","combinedamount","localStorage","setItem","JSON","stringify","added","removeFromBasket","removed","addQuantatieOfProduct","change","changed","getTotalBasketprice","getBasket","price","reduce","a","product","product_price","Math","round","Number","EPSILON","isItemInBasket","link","page","retrieve","apiProducts","correctProducts","productinbasket","find","collecteditem","product_id","sortbasket","sort","b","product_name","getBasketItemNumber","modelString","getItem","modelObject","parse","storeModel","object1","object2","keys1","Object","keys","keys2","key","val1","val2","areObjects","isObject","object"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,MAAMC,MAAM,GAAGD,MAAM,CAAC,0CAAD,CAArB;;AACA,MAAME,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEH,KAAK,CAACG;AADH,KAAb;AAGA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,WAAL;AACC;;AAGHA,EAAAA,WAAW,GAAE;AACX,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,YAAY,GAAG,CAAC,MAAD,CAAnB;AACAA,IAAAA,YAAY,CAACC,GAAb,CAAiBC,OAAO,IAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,kBAAL,CAAwBH,OAAxB,EAAiCI,IAAjC,CAAsCC,CAAC,IAAI;AACzCJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACAR,QAAAA,cAAc,GAAC,CAAC,GAAGA,cAAJ,EAAoB,GAAGQ,CAAC,CAACC,IAAF,CAAOA,IAAP,CAAYC,MAAZ,CAAmBC,WAAnB,CAA+BC,sBAAtD,CAAf;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACG,OAJL,EAIOa,KAJP,CAIaC,CAAC,IAAI;AAACV,QAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AAAgB,aAAKC,WAAL;AAAmB,OAJtD,EAIwDC,OAJxD,CAIgE,MAAM;AAAC,aAAKlB,aAAL,GAAqBE,cAArB;AAAoC,OAJ3G;AAKC,KAPH;AAWD;;AAEDiB,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,SAAKvB,WAAL,CAAiBwB,IAAjB,CAAsBD,QAAtB;AACD;;AAEDE,EAAAA,cAAc,CAACF,QAAD,EAAW;AACvBA,IAAAA,QAAQ,GAAG,KAAKvB,WAAL,CAAiB0B,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,KAAKJ,QAArC,CAAX;AACD;;AAEDK,EAAAA,eAAe,CAACC,YAAD,EAAe;AAC5B,SAAK7B,WAAL,CAAiB8B,OAAjB,CAAyB,UAAUP,QAAV,EAAoB;AAC3CA,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACD,KAFD;AAGD;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAI,GAAC,KAAZ,EAAmBC,MAAM,GAAC,CAA1B,EAA4B;AACrC,QAAIC,kBAAkB,GAAG,KAAKlC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAIC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA5F,CAAzB;AACA,QAAIM,IAAI,GAAG,KAAKtC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAI,EAAEC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA3D,CAAnC,CAAX;AACA,QAAIO,aAAa,GAAG;AAACR,MAAAA,IAAD;AAAQM,MAAAA,YAAY,EAACL,IAArB;AAA2BQ,MAAAA,YAAY,EAACP;AAAxC,KAApB;;AACA,QAAIC,kBAAkB,CAACO,MAAnB,KAA8B,CAAlC,EAAoC;AAClC,UAAIC,cAAc,GAAGT,MAAM,GAAGC,kBAAkB,CAAC,CAAD,CAAlB,CAAsBM,YAApD;AACAD,MAAAA,aAAa,GAAG;AAACR,QAAAA,IAAD;AAAQM,QAAAA,YAAY,EAACL,IAArB;AAA2BQ,QAAAA,YAAY,EAACE;AAAxC,OAAhB;AACD;;AACD,SAAK1C,KAAL,CAAWC,MAAX,GAAoB,CAAC,GAAGqC,IAAJ,EAAUC,aAAV,CAApB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EACIC,IAAI,CAACC,SAAL,CAAgB;AAAC7C,MAAAA,MAAM,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf;AAAR,KAAhB,CADJ;AAEI,SAAK0B,eAAL,CAAqB;AAACoB,MAAAA,KAAK,EAACR;AAAP,KAArB;AACL;;AAEDS,EAAAA,gBAAgB,CAACjB,IAAD,EAAMC,IAAN,EAAW;AACzB,QAAIM,IAAI,GAAG,KAAKtC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAI,EAAEC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA3D,CAAnC,CAAX;AACA,SAAKhC,KAAL,CAAWC,MAAX,GAAoB,CAAC,GAAGqC,IAAJ,CAApB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EACIC,IAAI,CAACC,SAAL,CAAgB;AAAC7C,MAAAA,MAAM,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf;AAAR,KAAhB,CADJ;AAEI,SAAK0B,eAAL,CAAqB;AAACsB,MAAAA,OAAO,EAAClB;AAAT,KAArB;AACL;;AAEDmB,EAAAA,qBAAqB,CAACnB,IAAD,EAAOC,IAAP,EAAamB,MAAb,EAAoB;AACvC,QAAIjB,kBAAkB,GAAG,KAAKlC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAIC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA5F,CAAzB;AACA,QAAIM,IAAI,GAAG,KAAKtC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAI,EAAEC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA3D,CAAnC,CAAX;AACA,QAAIO,aAAa,GAAG;AAACR,MAAAA,IAAD;AAAQM,MAAAA,YAAY,EAACL,IAArB;AAA2BQ,MAAAA,YAAY,EAAC;AAAxC,KAApB;AACA,QAAIE,cAAc,GAAG,CAArB;;AACA,QAAIR,kBAAkB,CAACO,MAAnB,KAA8B,CAAlC,EAAoC;AAChCC,MAAAA,cAAc,GAAGR,kBAAkB,CAAC,CAAD,CAAlB,CAAsBM,YAAtB,GAAqCW,MAAtD;;AACF,UAAIT,cAAD,IAAoB,CAAvB,EAA0B;AACxBA,QAAAA,cAAc,GAAG,CAAjB;AACD;;AACDH,MAAAA,aAAa,GAAG;AAACR,QAAAA,IAAD;AAAQM,QAAAA,YAAY,EAACL,IAArB;AAA2BQ,QAAAA,YAAY,EAACE;AAAxC,OAAhB;AACD;;AACD,SAAK1C,KAAL,CAAWC,MAAX,GAAoB,CAAC,GAAGqC,IAAJ,EAAUC,aAAV,CAApB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EACIC,IAAI,CAACC,SAAL,CAAgB;AAAC7C,MAAAA,MAAM,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf;AAAR,KAAhB,CADJ;AAGI,SAAK0B,eAAL,CAAqB;AAACyB,MAAAA,OAAO,EAACrB;AAAT,KAArB;AACL;;AAGAZ,EAAAA,WAAW,GAAE;AACZ,SAAKnB,KAAL,CAAWC,MAAX,GAAoB,EAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AAEA2C,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAe;AAAC7C,MAAAA,MAAM,EAAC;AAAR,KAAf,CAA1C;AAED;;AAEDoD,EAAAA,mBAAmB,GAAE;AACnB,QAAIpD,MAAM,GAAI,KAAKqD,SAAL,EAAd;AACA,QAAIC,KAAK,GAAGtD,MAAM,CAACuD,MAAP,CAAc,CAACC,CAAD,EAAIC,OAAJ,KAAgBD,CAAC,IAAKC,OAAO,CAAC3B,IAAR,CAAa4B,aAAb,GAA6BD,OAAO,CAAClB,YAAzE,EAAwF,CAAxF,CAAZ;AAEA,WAAOoB,IAAI,CAACC,KAAL,CAAW,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAhB,IAA2B,GAAtC,IAA6C,GAApD;AAED;;AAEDC,EAAAA,cAAc,CAACjC,IAAD,EAAOC,IAAP,EAAY;AACxB,QAAIE,kBAAkB,GAAG,KAAKlC,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,CAAyBU,MAAM,IAAIC,SAAS,CAACD,MAAM,CAACJ,IAAR,EAAcA,IAAd,CAAT,IAAiCI,MAAM,CAACE,YAAP,KAAwBL,IAA5F,CAAzB;;AACA,QAAGE,kBAAkB,CAACO,MAAnB,KAA8B,CAAjC,EAAmC;AACjC,aAAO,KAAP;AACD,KAFD,MAGI;AAAC,aAAO,IAAP;AAAY;AAElB;;AAED,QAAM/B,kBAAN,CAAyBuD,IAAzB,EAA+B;AAC7B,WAAO,MAAMvE,MAAM,CAACwE,IAAP,CAAYC,QAAZ,CAAqB,GAArB,EAA0B,KAAGF,IAAH,GAAS,EAAnC,CAAb;AAEC;;AAEHX,EAAAA,SAAS,GAAE;AACT,QAAIc,WAAW,GAAG,CAAC,GAAI,KAAKlE,aAAV,CAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY2D,WAAZ;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIpE,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAb;AACAA,IAAAA,MAAM,CAAC4B,OAAP,CAAeyC,eAAe,IAAG;AAC/BD,MAAAA,eAAe,GAAG,CAAC,GAAGA,eAAJ,EAAoB;AAAChC,QAAAA,YAAY,EAAEiC,eAAe,CAACjC,YAA/B;AAA4CG,QAAAA,YAAY,EAAE8B,eAAe,CAAC9B,YAA1E;AAAyFT,QAAAA,IAAI,EAAEqC,WAAW,CAACG,IAAZ,CAAiBC,aAAa,IAAIF,eAAe,CAACvC,IAAhB,CAAqB0C,UAArB,KAAoCD,aAAa,CAACC,UAApF;AAA/F,OAApB,CAAlB;AAAyO,KAD3O;AAEA,WAAO,KAAKC,UAAL,CAAgBL,eAAhB,CAAP;AACD;;AAEDK,EAAAA,UAAU,CAACzE,MAAD,EAAQ;AAChB,WAAOA,MAAM,CAAC0E,IAAP,CAAY,CAAClB,CAAD,EAAGmB,CAAH,KAAS;AAC1B,UAAGnB,CAAC,CAAC1B,IAAF,CAAO8C,YAAP,GAAsBD,CAAC,CAAC7C,IAAF,CAAO8C,YAAhC,EAA6C;AACzC,eAAO,CAAC,CAAR;AACD;;AACH,UAAGpB,CAAC,CAAC1B,IAAF,CAAO8C,YAAP,GAAsBD,CAAC,CAAC7C,IAAF,CAAO8C,YAAhC,EAA6C;AACzC,eAAO,CAAC,CAAR;AACD,OAFH,MAGI;AACA,eAAO,CAAP;AACD;AACF,KAVI,CAAP;AAYD;;AAEDC,EAAAA,mBAAmB,GAAE;AAEnB,WAAO,KAAK9E,KAAL,CAAWC,MAAX,CAAkBwC,MAAzB;AACD;;AA9IsC;;AAiJzC,MAAMsC,WAAW,GAAEpC,YAAY,CAACqC,OAAb,CAAqB,mBAArB,CAAnB;AACA,IAAIC,WAAW,GAAEpC,IAAI,CAACqC,KAAL,CAAWH,WAAX,CAAjB;AACAE,WAAW,GAACzE,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAD,GAAoCwE,WAAW,GAAE;AAAChF,EAAAA,MAAM,EAAC;AAAR,CAA5D;AACA,MAAMkF,UAAU,GAAG,IAAIxF,UAAJ,CAAesF,WAAf,CAAnB;AACA,eAAeE,UAAf;;AAEA,SAAS/C,SAAT,CAAmBgD,OAAnB,EAA4BC,OAA5B,EAAqC;AACnC,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAd;AACA,QAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAd;;AAEA,MAAIC,KAAK,CAAC7C,MAAN,KAAiBgD,KAAK,CAAChD,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED,OAAK,MAAMiD,GAAX,IAAkBJ,KAAlB,EAAyB;AACvB,UAAMK,IAAI,GAAGP,OAAO,CAACM,GAAD,CAApB;AACA,UAAME,IAAI,GAAGP,OAAO,CAACK,GAAD,CAApB;AACA,UAAMG,UAAU,GAAGC,QAAQ,CAACH,IAAD,CAAR,IAAkBG,QAAQ,CAACF,IAAD,CAA7C;;AACA,QACEC,UAAU,IAAI,CAACzD,SAAS,CAACuD,IAAD,EAAOC,IAAP,CAAxB,IACA,CAACC,UAAD,IAAeF,IAAI,KAAKC,IAF1B,EAGE;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAOA,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAP,KAAkB,QAA3C;AACD","sourcesContent":["import React from \"react\";\nimport '../butterclient';\nimport Butter from 'buttercms';\nconst butter = Butter('2fa7babaa7064c23b2cb90171957b2add0333e77');\nclass StoreModel extends React.Component {\n  constructor(props) {\n    super();\n    this.subscribers = [];\n    this.state = {\n      basket: props.basket\n    };\n    this.initialbasket = [];\n    this.getproducts();\n    }\n\n  \n  getproducts(){\n    let collecteditems = [];\n    let pagesToCheck = [\"shop\"];\n    pagesToCheck.map(toCheck => {\n      console.log(toCheck);\n      this.getPageInformation(toCheck).then(v => {\n        console.log(v); \n        collecteditems=[...collecteditems, ...v.data.data.fields.subcategory.product_in_subcategory ]\n        console.log(collecteditems);\n          }).catch(e => {console.log(e); this.clearBasket()}).finally(() => {this.initialbasket = collecteditems})\n      })\n\n\n\n  }\n\n  addObserver(callback) {\n    this.subscribers.push(callback);\n  }\n\n  removeObserver(callback) {\n    callback = this.subscribers.filter((o) => o !== callback);\n  }\n\n  notifyObservers(whatHappened) {\n    this.subscribers.forEach(function (callback) {\n      callback(whatHappened);\n    });\n  }\n\n  addToBasket(prod, size=\"n/a\", amount=1){\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && (produc.sizeselected === size));\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && (produc.sizeselected === size)));\n    let productObject = {prod , sizeselected:size, amountorderd:amount }\n    if (productthatexisted.length !== 0){\n      let combinedamount = amount + productthatexisted[0].amountorderd \n      productObject = {prod , sizeselected:size, amountorderd:combinedamount}\n    }\n    this.state.basket = [...bask, productObject];\n    localStorage.setItem(\"The_coolest_store\", \n        JSON.stringify( {basket:[...this.state.basket]}))\n        this.notifyObservers({added:productObject});\n  }\n\n  removeFromBasket(prod,size){\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && (produc.sizeselected === size)));\n    this.state.basket = [...bask];\n    localStorage.setItem(\"The_coolest_store\", \n        JSON.stringify( {basket:[...this.state.basket]}))\n        this.notifyObservers({removed:prod});\n  }\n\n  addQuantatieOfProduct(prod, size, change){\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && (produc.sizeselected === size));\n    let bask = this.state.basket.filter(produc => !(deepEqual(produc.prod, prod) && (produc.sizeselected === size)));\n    let productObject = {prod , sizeselected:size, amountorderd:1 }\n    let combinedamount = 1\n    if (productthatexisted.length !== 0){\n        combinedamount = productthatexisted[0].amountorderd + change;\n      if((combinedamount) <= 1 ){\n        combinedamount = 1;\n      }\n      productObject = {prod , sizeselected:size, amountorderd:combinedamount}\n    }\n    this.state.basket = [...bask, productObject];\n    localStorage.setItem(\"The_coolest_store\", \n        JSON.stringify( {basket:[...this.state.basket]}))\n\n        this.notifyObservers({changed:prod});\n  }\n  \n\n   clearBasket(){\n    this.state.basket = [];\n    console.log(this.state);\n    \n    localStorage.setItem(\"The_coolest_store\", JSON.stringify({basket:[]}))\n  \n  }\n\n  getTotalBasketprice(){\n    let basket  = this.getBasket();\n    let price = basket.reduce((a, product) => a += (product.prod.product_price * product.amountorderd) ,0)\n    \n    return Math.round((price + Number.EPSILON) * 100) / 100\n\n  }\n\n  isItemInBasket(prod, size){\n    let productthatexisted = this.state.basket.filter(produc => deepEqual(produc.prod, prod) && (produc.sizeselected === size));\n    if(productthatexisted.length !== 0){\n      return false\n    }\n    else{return true}\n  \n  }\n\n  async getPageInformation(link) {\n    return await butter.page.retrieve('*', ''+link +'');\n \n    }\n\n  getBasket(){\n    let apiProducts = [... this.initialbasket];\n    console.log(apiProducts);\n    let correctProducts = [];\n    let basket = [...this.state.basket];\n    basket.forEach(productinbasket =>{ \n      correctProducts = [...correctProducts,{sizeselected: productinbasket.sizeselected,amountorderd: productinbasket.amountorderd , prod: apiProducts.find(collecteditem => productinbasket.prod.product_id === collecteditem.product_id)}]; })\n    return this.sortbasket(correctProducts);\n  }\n\n  sortbasket(basket){\n    return basket.sort((a,b) => {\n      if(a.prod.product_name > b.prod.product_name){\n          return +1\n        }\n      if(a.prod.product_name < b.prod.product_name){\n          return -1\n        }\n      else{\n          return 0\n        }\n      }); \n\n  }\n\n  getBasketItemNumber(){\n    \n    return this.state.basket.length;\n  }\n}\n\nconst modelString= localStorage.getItem(\"The_coolest_store\");\nlet modelObject= JSON.parse(modelString);\nmodelObject?console.log(\"User data detected\"): modelObject= {basket:[]}\nconst storeModel = new StoreModel(modelObject);\nexport default storeModel;\n\nfunction deepEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n    const areObjects = isObject(val1) && isObject(val2);\n    if (\n      areObjects && !deepEqual(val1, val2) ||\n      !areObjects && val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isObject(object) {\n  return object != null && typeof object === 'object';\n}\n"]},"metadata":{},"sourceType":"module"}